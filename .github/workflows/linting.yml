name: Lint matchmaking CI

on: [ push, pull_request ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint
        uses: actions/setup-node@v2

      - name: Re init project
        run: |
          rm -rf backend/ frontend/ shared/
          git submodule update --force --recursive --init --remote

      - name: Run linting backend
        run: |
          cd backend/ && git checkout $GITHUB_REF_NAME && cd ..
          make lint-backend

      - name: Run linting frontend
        run: |
          cd frontend/ && git checkout $GITHUB_REF_NAME && cd ..
          make lint-frontend
  

  back-integration-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: matchmaking
          POSTGRES_PASSWORD: matchmaking
          POSTGRES_DB: matchmaking
        ports:
          - 11000:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      PA_TOKEN: ${{ secrets.PA_TOKEN }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      DATABASE_URL: postgres://matchmaking:matchmaking@localhost:11000/matchmaking
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - run: |
          rm -rf backend/ frontend/ shared/
          git submodule update --force --recursive --init --remote

      - name: Install dependencies
        run: make install-dependencies
      - name: Run integration tests backend
        run: |
          ls backend/
          cd backend/ && npx prisma db push && cd ../ 
          make test-backend